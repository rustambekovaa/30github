'''
Django settings for project project.

Generated by 'django-admin startproject' using Django 4

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
'''

from pathlib import Path
from decouple import config
from django.utils.translation import gettext_lazy as _
import os, json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = json.loads(config('DEBUG'))

ALLOWED_HOSTS = json.loads(config('ALLOWED_HOSTS'))


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third party
    'django_filters',
    'django_cleanup',
    'ckeditor_uploader',
    'drf_yasg',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_registration',
    'corsheaders',
    'ckeditor',

    # apps
    'account',
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'account.middleware.LastUserActivityMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

if json.loads(config('USE_POSTGRESQL')):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': config('POSTGRES_DB'),
            'USER': config('POSTGRES_USER'),
            'PASSWORD': config('POSTGRES_PASSWORD'),
            'HOST': config('POSTGRES_HOST'),
            'PORT': config('POSTGRES_PORT'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Bishkek'

USE_I18N = True

USE_TZ = True

gettext = lambda s: s
LANGUAGES = (
    ('ru', gettext('Russian')),
    ('en', gettext('English')),
)

MODELTRANSLATION_DEFAULT_LANGUAGE = 'ru'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static', 'static_dirs'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'static', 'static_root')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'account.User'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_USE_TLS = json.loads(config('EMAIL_USE_TLS'))
EMAIL_USE_SSL = json.loads(config('EMAIL_USE_SSL'))
EMAIL_PORT = int(config('EMAIL_PORT'))
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

FRONTEND_HOST = config('FRONTEND_HOST')
BACKEND_HOST = config('BACKEND_HOST')

EXPIRE_DAYS = int(config('EXPIRE_DAYS'))
FRONTED_RESET_PASSWORD_LINK = config('FRONTED_RESET_PASSWORD_LINK')
QUERY_FIELD_NAME_RP = config('FRONTED_RESET_PASSWORD_LINK')

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'api.parsers.MultiPartJSONParser',
    ],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'api.paginations.StandardResultsSetPagination',
    'PAGE_SIZE': 50,
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
}

REST_REGISTRATION = {
    'LOGIN_RETRIEVE_TOKEN': True,
    'REGISTER_VERIFICATION_ENABLED': False,
    'REGISTER_EMAIL_VERIFICATION_ENABLED': False,
    'RESET_PASSWORD_VERIFICATION_ENABLED': False,
}

CSRF_TRUSTED_ORIGINS = json.loads(config('CSRF_TRUSTED_ORIGINS'))

# CORS_ORIGIN_WHITELIST = json.loads(config('CORS_ORIGIN_WHITELIST'))

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono-lisa',
        # 'skin': 'office2013',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': [
                'Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            {'name': 'clipboard', 'items': [
                'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': [
                'Find', 'Replace', '-', 'SelectAll']},
            {'name': 'forms',
             'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
                       'HiddenField']},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert',
             'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            '/',
            {'name': 'styles', 'items': [
                'Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {'name': 'yourcustomtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',

            ]},
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        'toolbarGroups': [{'name': 'document', 'groups': ['mode', 'document', 'doctools']}],
        'height': 291,
        'width': '100%',
        'filebrowserWindowHeight': 725,
        'filebrowserWindowWidth': 940,
        'toolbarCanCollapse': True,
        'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage',  # the upload image feature
            # your extra plugins here
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            # 'devtools',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
        'contentsCss': [ ],
    }
}


# *-- Jazzmin Settings --*

JAZZMIN_SETTINGS = {
    # заголовок окна (по умолчанию будет current_admin_site.site_title, если он отсутствует или отсутствует)
    'site_title': ' Admin',

    # Заголовок на экране входа (максимум 19 символов) (по умолчанию — current_admin_site.site_header, если он отсутствует или отсутствует)
    'site_header': 'Maanai',

    # Название бренда (максимум 19 символов) (по умолчанию — current_admin_site.site_header, если оно отсутствует или отсутствует)
    'site_brand': 'Admin Panel',

    # Логотип для вашего сайта должен присутствовать в статических файлах, используется для бренда в левом верхнем углу.
    # 'site_logo': os.path.join('img', 'main_logo.gif'),

    # Классы CSS, которые применяются к логотипу выше
    'site_logo_classes': '',

    # Относительный путь к значку для вашего сайта, по умолчанию будет site_logo, если он отсутствует (в идеале 32x32 px)
    'site_icon': os.path.join('img', 'logo.png'),

    # Приветственный текст на экране входа
    'welcome_sign': 'Добро пожаловать в администрацию сайта',

    # Авторское право на нижний колонтитул
    'copyright': 'Maanai',

    # Администратор модели для поиска из панели поиска, панель поиска опускается, если исключена
    'search_model': 'account.User',

    # Имя поля в модели пользователя, которое содержит аватар ImageField/URLField/Charfield или вызываемый объект, который получает пользователя
    'user_avatar': 'avatar',

    ############
    # Top Menu #
    ############

    # Ссылки для размещения в верхнем меню
    'topmenu_links': [

        # URL-адрес, который становится обратным (можно добавить разрешения)
        {'name': _('Главная'),  'url': 'admin:index',
            'permissions': ['auth.view_user']},

        # внешний URL, который открывается в новом окне (можно добавить разрешения)
        #{'name': 'Jazzmin', 'url': 'https://github.com/farridav/django-jazzmin/issues', 'new_window': True},
        {'name': _('Rest Api'), 'url': '/api/v1/swagger', 'new_window': True},

        # Приложение с выпадающим меню для всех страниц своих моделей (разрешения проверены для моделей)
        #{'app': 'books'},
    ],

    #############
    # Меню пользователя#
    #############

    # Дополнительные ссылки для включения в меню пользователя в правом верхнем углу (URL-адрес типа 'приложение' не разрешен)
    'usermenu_links': [
    ],

    #############
    # Боковое меню #
    #############

    # Отображать ли боковое меню
    'show_sidebar': True,

    # Нужно ли автоматически расширять меню
    'navigation_expanded': True,

    # Скрыть эти приложения при создании бокового меню, например (авторизация)
    'hide_apps': [],

    # Скрыть эти модели при создании бокового меню (например, auth.user)
    'hide_models': [],

    # Список приложений (и/или моделей) для базового упорядочения бокового меню (не обязательно содержать все приложения/модели)
    'order_with_respect_to': [
  
    ],

    # Пользовательские ссылки для добавления в группы приложений, вводимые по имени приложения
    # 'custom_links': {
    #     'Products': [{
    #         'name': 'Make Messages',
    #         'url': 'make_messages',
    #         'icon': 'fas fa-comments',
    #         'permissions': ['books.view_book']
    #     }]
    # },

    # Пользовательские значки для приложений/моделей бокового меню См. https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # полный список бесплатных классов значков 5.13.0
    'icons': {
        'auth.Group': 'fas fa-users',
        'account.User': 'fas fa-user',
    },
    # Значки, которые используются, если они не указаны вручную
    'default_icon_parents': 'fas fa-chevron-circle-right',
    'default_icon_children': 'fas fa-circle',

    #################
    # Связанный модальный #
    #################
    # Используйте модальные окна вместо всплывающих окон
    'related_modal_active': False,

    #############
    # Настройки пользовательского интерфейса #
    #############
    # Относительные пути к пользовательским скриптам CSS/JS (должны присутствовать в статических файлах)
    'custom_css': None,
    'custom_js': 'js/admin_script.js',
    # Показывать ли настройщик пользовательского интерфейса на боковой панели
    'show_ui_builder': True,

    ###############
    # Сменить вид #
    ###############
    # Визуализировать представление изменений в виде отдельной формы или на вкладках, текущие параметры
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    'changeform_format': 'single',
    # переопределить формы изменений для каждой модели на основе администратора
    'changeform_format_overrides': {'auth.user': 'collapsible', 'auth.group': 'vertical_tabs'},

}

JAZZMIN_UI_TWEAKS = {
    'navbar_small_text': False,
    'footer_small_text': False,
    'body_small_text': False,
    'brand_small_text': False,
    'brand_colour': 'navbar-dark',
    'accent': 'accent-primary',
    'navbar': 'navbar-dark',
    'no_navbar_border': False,
    'navbar_fixed': True,
    'layout_boxed': False,
    'footer_fixed': False,
    'sidebar_fixed': True,
    'sidebar': 'sidebar-dark-danger',
    'sidebar_nav_small_text': True,
    'sidebar_disable_expand': False,
    'sidebar_nav_child_indent': False,
    'sidebar_nav_compact_style': False,
    'sidebar_nav_legacy_style': False,
    'sidebar_nav_flat_style': True,
    'theme': 'default',
    'dark_mode_theme': None,
    'button_classes': {
        'primary': 'btn-primary',
        'secondary': 'btn-outline-secondary',
        'info': 'btn-info',
        'warning': 'btn-warning',
        'danger': 'btn-danger',
        'success': 'btn-success'
    }
}